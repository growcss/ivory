@charset "UTF-8";

/// This mixin outputs a property with rem or em units and a px fallback.
/// Values passed without units are used as multipliers for the final
/// rem or em and px values, all other units are output without modification.
///
/// @param {string} $prop
/// @param {list}   $vals
/// @param {string} $unit
///
/// @example scss - Usage
///   @include px-and-unit([property], [multiplier | explicit value] [, ...]);
///
/// @example scss - Usage
///   .margin {
///     @include px-and-unit(margin, 2);
///   }
///
/// @example css - CSS Output
///   .margin {
///     margin: 32px;
///     margin: 2rem;
///   }
@mixin px-and-unit($prop, $vals, $unit: rem) {
  $px-list: ();
  $em-list: ();

  @each $val in $vals {
    $calcs: fallback-to-px($val, $unit);
    $px-list: append($px-list, nth($calcs, 1));
    $em-list: append($em-list, nth($calcs, 2));
  }

  #{$prop}: $px-list;
  #{$prop}: $em-list;
}
