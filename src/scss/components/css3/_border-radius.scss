@charset "UTF-8";

/// Round all corners by a specific amount, defaults to value of `config-get("i-border-radius")`.
///
/// When two values are passed, the first is the horizontal radius
/// and the second is the vertical radius.
///
/// Note: webkit does not support shorthand syntax for several corners at once.
/// So in the case where you pass several values only the first will be passed to webkit.
///
/// @example scss - Usage
///   .simple   {
///     @include border-radius(4px, 4px);
///   }
///   .compound {
///     @include border-radius(2px 5px, 3px 6px);
///   }
///   .crazy    {
///     @include border-radius(1px 3px 5px 7px, 2px 4px 6px 8px)
///   }
///
/// @example css - CSS Output
///   .simple {
///     -moz-border-radius: 4px / 4px;
///     -webkit-border-radius: 4px 4px;
///     border-radius: 4px / 4px;
///   }
///   .compound {
///     -moz-border-radius: 2px 5px / 3px 6px;
///     -webkit-border-radius: 2px 3px;
///     border-radius: 2px 5px / 3px 6px;
///   }
///  .crazy {
///    -moz-border-radius: 1px 3px 5px 7px / 2px 4px 6px 8px;
///    -webkit-border-radius: 1px 2px;
///    border-radius: 1px 3px 5px 7px / 2px 4px 6px 8px;
///  }
@mixin border-radius($radius: config-get("i-border-radius"), $vertical-radius: false) {
  /// Legacy Webkit didn't understand the official shorthand syntax for specifying a vertical radius.
  $legacy-webkit-radius: first-value-of($radius);
  @if $vertical-radius {
    $legacy-webkit-radius: append($legacy-webkit-radius, first-value-of($vertical-radius));
  }

  @include prefix(border-radius, $legacy-webkit-radius, webkit);

  /// Official syntax for everyone else
  @include prefix(border-radius, if($vertical-radius, #{$radius} / #{$vertical-radius}, $radius), o ms moz spec);
}

/// Round radius at position by amount.
///
/// * legal values for `$vert`: `top`, `bottom`
/// * legal values for `$horz`: `left`, `right`
@mixin border-corner-radius($vert, $horz, $radius: config-get("i-border-radius")) {
  /// Support for mozilla's syntax for specifying a corner
  @include prefix("border-radius-#{$vert}#{$horz}", $radius, moz);
  /// Official syntax for everyone else
  @include prefix("border-#{$vert}-#{$horz}-radius", $radius, o ms webkit spec);
}

/// Round top-left corner only
@mixin border-top-left-radius($radius: config-get("i-border-radius")) {
  @include border-corner-radius(top, left, $radius);
}

/// Round top-right corner only
@mixin border-top-right-radius($radius: config-get("i-border-radius")) {
  @include border-corner-radius(top, right, $radius);
}

/// Round bottom-left corner only
@mixin border-bottom-left-radius($radius: config-get("i-border-radius")) {
  @include border-corner-radius(bottom, left, $radius);
}

/// Round bottom-right corner only
@mixin border-bottom-right-radius($radius: config-get("i-border-radius")) {
  @include border-corner-radius(bottom, right, $radius);
}

/// Round both top corners by amount
@mixin border-top-radius($radius: config-get("i-border-radius")) {
  @include border-top-left-radius($radius);
  @include border-top-right-radius($radius);
}

/// Round both right corners by amount
@mixin border-right-radius($radius: config-get("i-border-radius")) {
  @include border-top-right-radius($radius);
  @include border-bottom-right-radius($radius);
}

/// Round both bottom corners by amount
@mixin border-bottom-radius($radius: config-get("i-border-radius")) {
  @include border-bottom-left-radius($radius);
  @include border-bottom-right-radius($radius);
}

/// Round both left corners by amount
@mixin border-left-radius($radius: config-get("i-border-radius")) {
  @include border-top-left-radius($radius);
  @include border-bottom-left-radius($radius);
}
